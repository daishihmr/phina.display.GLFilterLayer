phina.namespace(function(){phina.define("phina.glfilter.GLFilterLayer",{superClass:"phina.display.Layer",enableGL:!0,gl:null,canvas:null,renderer:null,domElement:null,sizeInfo:null,domElementGL:null,resizedCanvas:null,texture:null,framebuffer0:null,framebuffer1:null,startNode:null,nodes:null,endNode:null,init:function(e){this.superInit(e);var t=e.width,i=e.height;this.canvas=phina.graphics.Canvas(),this.canvas.width=t,this.canvas.height=i,this.renderer=phina.display.CanvasRenderer(this.canvas),this.domElement=this.canvas.domElement,this.sizeInfo=phigl.ImageUtil.calcSizePowOf2(t*e.quarity,i*e.quarity),this.domElementGL=e.domElementGL||document.createElement("canvas");var n=this.gl=this.domElementGL.getContext("webgl");this.domElementGL.width=this.sizeInfo.width,this.domElementGL.height=this.sizeInfo.height,n.viewport(0,0,this.sizeInfo.width,this.sizeInfo.height),n.clearColor(0,0,0,0),n.enable(n.BLEND),n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE),n.blendEquationSeparate(n.FUNC_ADD,n.FUNC_ADD),this.resizedCanvas=phina.graphics.Canvas(),this.resizedCanvas.setSize(this.sizeInfo.width,this.sizeInfo.height),this.texture=phigl.Texture(n),this.framebuffer0=phigl.Framebuffer(n,this.sizeInfo.width,this.sizeInfo.height),this.framebuffer1=phigl.Framebuffer(n,this.sizeInfo.width,this.sizeInfo.height),this.startNode=phina.glfilter.StartNode(),this.startNode.layer=this,this.nodes=[],this.endNode=phina.glfilter.EndNode(),this.endNode.layer=this},addNode:function(e){return e.layer=this,this.nodes.push(e),this},render:function(){var e=this.sizeInfo;this.resizedCanvas.clear(),this.resizedCanvas.context.drawImage(this.domElement,0,0,this.width,this.height,e.srcX,e.srcY,e.srcWidth,e.srcHeight),this.texture.setImage(this.resizedCanvas),this.startNode.render(this,this.framebuffer1,e);var t=this.framebuffer1,i=this.framebuffer0;this.nodes.filter(function(e){return e.enabled}).forEach(function(n){n.render(t,i,e);var r=t;t=i,i=r}),this.endNode.render(t,e)},draw:function(e){var t=this._worldMatrix;if(this._worldMatrix=null,this._worldAlpha=1/this._worldAlpha,this.renderer.render(this),this._worldMatrix=t,this._worldAlpha=1/this._worldAlpha,this.enableGL){this.render();var i=this.domElementGL,n=this.sizeInfo;e.context.drawImage(i,n.srcX,n.srcY,n.srcWidth,n.srcHeight,-this.width*this.originX,-this.height*this.originY,this.width,this.height)}else{var r=this.domElement;e.context.drawImage(r,0,0,r.width,r.height,-this.width*this.originX,-this.height*this.originY,this.width,this.height)}}})}),phina.namespace(function(){phina.define("phina.glfilter.BloomNode",{superClass:"phina.glfilter.Node",init:function(){this.superInit(),this.luminanceNode=phina.glfilter.LuminanceFilter(),this.gaussianNode=phina.glfilter.MultiGaussianNode(4,4),this.mixNode=phina.glfilter.MixNode(1,1),this.minBright=0},_setup:function(){this.superMethod("_setup");var e=this.layer.gl,t=this.layer.sizeInfo;this.luminanceNode.layer=this.layer,this.gaussianNode.layer=this.layer,this.mixNode.layer=this.layer,this.bloomPath0=phigl.Framebuffer(e,t.width,t.height),this.bloomPath1=phigl.Framebuffer(e,t.width,t.height)},_render:function(e,t,i){this.luminanceNode.render(e,this.bloomPath0,i),this.gaussianNode.render(this.bloomPath0,this.bloomPath1,i),this.mixNode.render(e,this.bloomPath1,t,i)},_accessor:{minBright:{get:function(){return this.luminanceNode.uniformValues.minBright},set:function(e){this.luminanceNode.uniformValues.minBright=e}}}}),phina.define("phina.glfilter.LuminanceFilter",{superClass:"phina.glfilter.ShaderNode",init:function(){this.superInit()},getFragmentShaderSource:function(){return["precision mediump float;","uniform sampler2D texture;","uniform float minBright;","varying vec2 vUv;","void main(void){","  vec4 texel = texture2D(texture, vUv);","  vec3 col = max(vec3(0.0), (texel - minBright).rgb);","  gl_FragColor = vec4(col, texel.a);","}"].join("\n")},getFragmentShaderUniforms:function(){return["texture","minBright"]}})}),phina.namespace(function(){phina.define("phina.glfilter.CopyNode",{superClass:"phina.glfilter.ShaderNode",init:function(){this.superInit()}})}),phina.namespace(function(){phina.define("phina.glfilter.GaussianNode",{superClass:"phina.glfilter.ShaderNode",init:function(){this.superInit(),this.on("prerender",function(e){var t=e.sizeInfo;this.resolution=[t.width,t.height]})},getFragmentShaderSource:function(){return["precision mediump float;","uniform sampler2D texture;","uniform vec2 resolution;","uniform vec2 direction;","varying vec2 vUv;","vec4 blur5(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {","  vec4 color = vec4(0.0);","  vec2 off1 = vec2(1.3333333333333333) * direction;","  color += texture2D(image, uv) * 0.29411764705882354;","  color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;","  color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;","  return color; ","}","void main(void) {","  vec4 col = blur5(texture, vUv, resolution, direction);","  gl_FragColor = col;","}"].join("\n")},getFragmentShaderUniforms:function(){return["texture","resolution","direction"]},_accessor:{resolution:{get:function(){return this.uniformValues.resolution},set:function(e){this.uniformValues.resolution=e}}}})}),phina.namespace(function(){phina.define("phina.glfilter.ListNode",{superClass:"phina.glfilter.Node",nodes:null,init:function(){this.superInit(),this.nodes=[]},_setup:function(){var e=this.layer.gl,t=this.layer.sizeInfo;this.framebuffer0=phigl.Framebuffer(e,t.width,t.height),this.framebuffer1=phigl.Framebuffer(e,t.width,t.height)},isEnabled:function(){var e=this.nodes.filter(function(e){return e.enabled}).length;return this._enabled&&e>0},addNode:function(e){this.nodes.push(e),e.layer=this.layer},_render:function(e,t,i){var n=this.nodes.filter(function(e){return e.enabled});if(1===n.length)n.first.render(e,t,i);else if(n.length>0){n.first.render(e,this.framebuffer0,i);for(var r=1;r<n.length-1;r++){n[r].render(this.framebuffer0,this.framebuffer1,i);var s=this.framebuffer0;this.framebuffer0=this.framebuffer1,this.framebuffer1=s}n.last.render(this.framebuffer0,t,i)}}})}),phina.namespace(function(){phina.define("phina.glfilter.MixNode",{superClass:"phina.glfilter.ShaderNode",init:function(e,t){this.superInit(),this.uniformValues.weight0=e,this.uniformValues.weight1=t},render:function(e,t,i,n){var r=this.layer.gl;i.bind(),r.clear(r.COLOR_BUFFER_BIT),this.screen.uniforms.texture0.setValue(0).setTexture(e.texture),this.screen.uniforms.texture1.setValue(1).setTexture(t.texture),this.uniformValues.forIn(function(e,t){"texture0"!==e&&"texture1"!==e&&this.screen.uniforms[e].setValue(t)}.bind(this)),this.screen.draw(),r.flush()},getFragmentShaderSource:function(){return["precision mediump float;","uniform sampler2D texture0;","uniform sampler2D texture1;","uniform float weight0;","uniform float weight1;","varying vec2 vUv;","void main(void) {","  vec4 col0 = texture2D(texture0, vUv);","  vec4 col1 = texture2D(texture1, vUv);","  vec3 srcColor = col1.rgb * col1.a;","  vec3 dstColor = col0.rgb * 1.0;","  float srcAlpha = col1.a * 1.0;","  float dstAlpha = col0.a * 1.0;","  gl_FragColor = vec4(srcColor + dstColor, srcAlpha + dstAlpha);","}"].join("\n")},getFragmentShaderUniforms:function(){return["texture0","texture1","weight0","weight1"]}})}),phina.namespace(function(){phina.define("phina.glfilter.MonotoneNode",{superClass:"phina.glfilter.ShaderNode",init:function(){this.superInit()},getFragmentShaderSource:function(){return["precision mediump float;","uniform sampler2D texture;","varying vec2 vUv;","void main(void) {","  vec4 col = texture2D(texture, vUv);","  if (col.a == 0.0) discard;","  float c = col.r + col.g + col.b;","  gl_FragColor = vec4(vec3(c / 3.0), col.a);","}"].join("\n")}})}),phina.namespace(function(){phina.define("phina.glfilter.MultiGaussianNode",{superClass:"phina.glfilter.ListNode",init:function(e,t){this.superInit(),this.unit=e||0,this.count=t||4,this.on("prerender",function(){this.setUnit()})},setUnit:function(){this.nodes.forEach(function(e,t){e.uniformValues.direction=t%2==0?[t*this.unit,0]:[0,t*this.unit]}.bind(this))},_setup:function(){this.superMethod("_setup");for(var e=this.layer.sizeInfo,t=0;t<this.count;t++){const t=GaussianNode();t.enabled=!0,t.uniformValues.resolution=[e.width,e.height],this.addNode(t);const i=GaussianNode();i.enabled=!0,i.uniformValues.resolution=[e.width,e.height],this.addNode(i)}this.setUnit()}})}),phina.namespace(function(){phina.define("phina.glfilter.Node",{superClass:"phina.util.EventDispatcher",_layer:null,_enabled:!0,init:function(){this.superInit()},isEnabled:function(){return this._enabled},setEnabled:function(e){this._enabled=e},setLayer:function(e){return this._layer=e,this._setup(),this},_setup:function(){return this},render:function(e,t,i){this.flare("prerender",{sizeInfo:i}),this._render(e,t,i),this.flare("postrender")},_render:function(e,t,i){},addTo:function(e){return e.addNode(this),this},_accessor:{enabled:{get:function(){return this.isEnabled()},set:function(e){this.setEnabled(e)}},layer:{get:function(){return this._layer},set:function(e){this.setLayer(e)}}}})}),phina.namespace(function(){phina.define("phina.glfilter.ReverseNode",{superClass:"phina.glfilter.ShaderNode",init:function(){this.superInit()},getFragmentShaderSource:function(){return["precision mediump float;","uniform sampler2D texture;","varying vec2 vUv;","void main(void) {","  vec4 col = texture2D(texture, vUv);","  if (col.a == 0.0) discard;","  gl_FragColor = vec4(1.0 - col.rgb, col.a);","}"].join("\n")}})}),phina.namespace(function(){phina.define("phina.glfilter.SepiaNode",{superClass:"phina.glfilter.ShaderNode",init:function(){this.superInit()},getFragmentShaderSource:function(){return["precision mediump float;","uniform sampler2D texture;","varying vec2 vUv;","void main(void) {","  vec4 tex = texture2D(texture, vUv);","  vec3 c = vec3((tex.r + tex.g + tex.b) / 3.0);","  gl_FragColor = vec4(c.r * 1.2, c.g * 1.05, c.b * 0.9, tex.a);","}"].join("\n")}})}),phina.namespace(function(){var e=new Float32Array([2,0,0,0,0,2,0,0,0,0,-10,0,0,0,0,1]);phina.define("phina.glfilter.ShaderNode",{superClass:"phina.glfilter.Node",uniformValues:null,init:function(){this.superInit(),this.uniformValues={}},_setup:function(){var t=this.layer.gl;return this.screen=phigl.Drawable(t).setProgram(this._createProgram(t)).setGeometry(phigl.PlaneXY({width:1,height:1,normalsEnabled:!1})).declareUniforms([].concat(this.getVertexShaderUniforms(),this.getFragmentShaderUniforms())),this.screen.uniforms.mvpMatrix.setValue(e),this},_render:function(e,t){var i=this.layer.gl;return t.bind(),i.clear(i.COLOR_BUFFER_BIT),this.screen.uniforms.texture.setValue(0).setTexture(e.texture),this.uniformValues.forIn(function(e,t){"texture"!==e&&this.screen.uniforms[e].setValue(t)}.bind(this)),this.screen.draw(),i.flush(),this},_createProgram:function(e){var t=this.getVertexShaderSource(),i=this.getFragmentShaderSource();return phigl.Program(e).attach(phigl.VertexShader().setSource(t)).attach(phigl.FragmentShader().setSource(i)).link()},getVertexShaderSource:function(){return["attribute vec3 position;","attribute vec2 uv;","uniform mat4 mvpMatrix;","varying vec2 vUv;","void main(void) {","  vUv = uv;","  gl_Position = mvpMatrix * vec4(position, 1.0);","}"].join("\n")},getVertexShaderUniforms:function(){return["mvpMatrix"]},getFragmentShaderSource:function(){return["precision mediump float;","uniform sampler2D texture;","varying vec2 vUv;","void main(void) {","  vec4 col = texture2D(texture, vUv);","  if (col.a == 0.0) discard;","  gl_FragColor = col;","}"].join("\n")},getFragmentShaderUniforms:function(){return["texture"]}}),phina.define("phina.glfilter.StartNode",{superClass:"phina.glfilter.ShaderNode",init:function(){this.superInit()},getFragmentShaderSource:function(){return["precision mediump float;","uniform sampler2D texture;","varying vec2 vUv;","void main(void) {","  vec4 col = texture2D(texture, vec2(vUv.x, 1.0 - vUv.y));","  if (col.a == 0.0) discard;","  gl_FragColor = col;","}"].join("\n")}}),phina.define("phina.glfilter.EndNode",{superClass:"phina.glfilter.ShaderNode",init:function(){this.superInit()},_render:function(e){var t=this.layer.gl;phigl.Framebuffer.unbind(t),t.clear(t.COLOR_BUFFER_BIT),this.screen.uniforms.texture.setValue(0).setTexture(e.texture),this.screen.draw(),t.flush()}})}),phina.namespace(function(){phina.define("phina.glfilter.ZoomBlurNode",{superClass:"phina.glfilter.ShaderNode",init:function(){this.superInit()},getFragmentShaderSource:function(){return["precision mediump float;","uniform sampler2D texture;","uniform float x;","uniform float y;","uniform float strength;","varying vec2 vUv;","const float nFrag = 1.0 / 30.0;","float rnd(vec3 scale, float seed){","    return fract(sin(dot(gl_FragCoord.stp + seed, scale)) * 43758.5453 + seed);","}","void main(void){","    vec2  center = vec2(x, 1.0 - y);","    vec4  destColor = vec4(0.0);","    float random = rnd(vec3(12.9898, 78.233, 151.7182), 0.0);","    vec2  fcc = vUv - center;","    float totalWeight = 0.0;","","    for(float i = 0.0; i <= 30.0; i++){","        float percent = (i + random) * nFrag;","        float weight = percent - percent * percent;","        vec2  t = vUv - fcc * percent * strength * nFrag;","        vec4 col = texture2D(texture, t);","        destColor += col * weight;","        totalWeight += weight;","    }","    gl_FragColor = vec4(destColor / totalWeight);","}"].join("\n")},getFragmentShaderUniforms:function(){return["texture","x","y","strength"]},_accessor:{x:{get:function(){return this.uniformValues.x},set:function(e){this.uniformValues.x=e}},y:{get:function(){return this.uniformValues.y},set:function(e){this.uniformValues.y=e}},strength:{get:function(){return this.uniformValues.strength},set:function(e){this.uniformValues.strength=e}}}})});